% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mparseRcpp.R
\name{mparseRcpp}
\alias{mparseRcpp}
\title{Parse custom model using \code{SimInf} style markup}
\usage{
mparseRcpp(transitions = NULL, compartments = NULL, pars = NULL,
  addVars = NULL, stopCrit = NULL)
}
\arguments{
\item{transitions:}{character vector containing transitions on the form \code{"X ->
... -> Y"}. The left (right) side is the initial (final)
state and the propensity is written in between the
\code{->}-signs. The special symbol \code{@} is reserved for the empty
set. For example, \code{transitions = c("S -> k1*S*I -> I", "I ->
k2*I -> R")} expresses a SIR model.}

\item{compartments:}{contains the names of the involved compartments, for
example, \code{compartments = c("S", "I", "R")}.}

\item{pars:}{named vector of parameters.}

\item{addVars:}{\code{data.frame} with columns: 
\itemize{
    \item{\code{varnames}:}{ variable names;}
    \item{\code{inivalue}:}{ initial value for variable.}
}
This is used to specify variables that can be used for stopping criteria.}

\item{stopCrit:}{A \code{character} \code{vector} including additional stopping criteria for rejecting
simulations early. These will be inserted within \code{if(CRIT){return 0;}} statements
within the underlying Rcpp code, which a return value of 0 corresponds to rejecting
the simulation. Variables in \code{CRIT} must match either those in \code{compartments}
and/or \code{addVars}.}
}
\value{
An object of class \code{parsedRcpp} that contains code to compile
        into an \code{XPtr} object.
}
\description{
Parse custom model using \code{SimInf} style markup and 
create code to compile to an \code{XPtr} object to use in \code{ABCSMC} functions.
Does not have full functionality of \code{mparse}. Currently only supports
simulations on a single node.
}
